@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  :root {
    --background: 222.2 84% 4.9%;
    --foreground: 210 40% 98%;
    --card: 222.2 84% 6.9%;
    --card-foreground: 210 40% 98%;
    --popover: 222.2 84% 4.9%;
    --popover-foreground: 210 40% 98%;
    --primary: 260 85% 65%;
    --primary-foreground: 260 85% 98%;
    --secondary: 217.2 32.6% 17.5%;
    --secondary-foreground: 210 40% 98%;
    --muted: 217.2 32.6% 17.5%;
    --muted-foreground: 215 20.2% 65.1%;
    --accent: 180 80% 45%;
    --accent-foreground: 210 40% 98%;
    --destructive: 0 62.8% 30.6%;
    --destructive-foreground: 210 40% 98%;
    --border: 217.2 32.6% 17.5%;
    --input: 217.2 32.6% 17.5%;
    --ring: 260 85% 65%;
    --radius: 0.5rem;
  }
}

@layer base {
  * {
    @apply border-border;
  }
  body {
    @apply bg-background text-foreground;
  }
}

.animated-gradient {
    background-size: 300% 300%;
    animation: gradient-animation 12s ease infinite;
}

@keyframes gradient-animation {
    0% {
        background-position: 0% 50%;
    }
    50% {
        background-position: 100% 50%;
    }
    100% {
        background-position: 0% 50%;
    }
}

@keyframes rgb-glow {
  0% {
    background-position: 0% 50%;
  }
  50% {
    background-position: 100% 50%;
  }
  100% {
    background-position: 0% 50%;
  }
}

.rgb-border {
  position: relative;
  border-radius: 0.75rem; /* rounded-xl */
  padding: 1px; /* This padding creates the space for the border */
  overflow: visible; /* Allow shadow to be visible */
}

.rgb-border::before {
  content: '';
  position: absolute;
  top: 0; right: 0; bottom: 0; left: 0;
  z-index: -1;
  margin: -1px; /* This makes the pseudo-element slightly larger than the parent */
  border-radius: inherit; /* This makes sure the border-radius matches */
  background: linear-gradient(45deg, rgba(255, 0, 255, 0.2), rgba(0, 255, 255, 0.2), rgba(255, 255, 0, 0.2), rgba(0, 255, 0, 0.2), rgba(255, 0, 255, 0.2));
  background-size: 400% 400%;
  animation: rgb-glow 4s linear infinite;
  opacity: 0;
  transition: opacity 0.3s ease-in-out;
}

.rgb-border:hover::before {
  opacity: 1;
}

.rgb-border > div {
  background-color: hsl(var(--card));
  border-radius: calc(0.75rem - 1px); /* Match parent radius minus padding */
  overflow: hidden;
}

@keyframes icon-float {
  0%, 100% {
    transform: translateY(0px) rotate(0deg);
  }
  50% {
    transform: translateY(-20px) rotate(10deg);
  }
}

@keyframes icon-blink-glow {
  0%, 100% {
    opacity: 0.2;
    filter: drop-shadow(0 0 2px currentColor);
  }
  50% {
    opacity: 0.8;
    filter: drop-shadow(0 0 8px currentColor);
  }
}

.icon-shape {
  animation: icon-float 15s ease-in-out infinite, icon-blink-glow 8s ease-in-out infinite alternate;
  will-change: transform, opacity, filter;
  color: hsl(var(--primary));
}

.icon-shape:nth-child(2) {
  animation-duration: 18s, 7s;
  color: hsl(var(--accent));
}
.icon-shape:nth-child(3) {
  animation-duration: 20s, 9s;
}
.icon-shape:nth-child(4) {
  animation-duration: 16s, 6s;
   color: hsl(var(--accent));
}
.icon-shape:nth-child(5) {
  animation-duration: 22s, 10s;
}
.icon-shape:nth-child(6) {
  animation-duration: 19s, 8s;
   color: hsl(var(--accent));
}

.animation-delay-300 {
  animation-delay: 300ms;
}
.animation-delay-600 {
  animation-delay: 600ms;
}
.animation-delay-900 {
  animation-delay: 900ms;
}

.angled-card {
  position: relative;
  padding: 1.5rem;
  background-color: hsla(var(--card), 0.8);
  backdrop-filter: blur(8px);
  border: 1px solid hsl(var(--border));
  clip-path: polygon(0 0, 100% 10%, 100% 100%, 0 90%);
  transition: all 0.3s ease-in-out;
}

.angled-card::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: linear-gradient(45deg, hsla(var(--primary), 0.2), transparent, hsla(var(--accent), 0.2));
  opacity: 0;
  transition: opacity 0.3s ease-in-out;
  z-index: -1;
  clip-path: inherit;
}

.angled-card:hover {
  transform: translateY(-5px) scale(1.02);
  border-color: hsl(var(--primary));
}

.angled-card:hover::before {
  opacity: 1;
}

.angled-card-header {
  display: flex;
  align-items: center;
  gap: 1rem;
}

.angled-card-title {
  font-size: 1.25rem;
  font-weight: 700;
  color: hsl(var(--card-foreground));
}

.angled-card-content {
  margin-top: 1rem;
  color: hsl(var(--muted-foreground));
}

.feature-card {
  position: relative;
  padding: 1.5rem;
  background-color: hsla(var(--card), 0.8);
  backdrop-filter: blur(8px);
  border-radius: var(--radius);
  border: 1px solid hsl(var(--border));
  overflow: hidden;
  transition: all 0.3s ease-in-out;
  background-image: radial-gradient(circle at 1px 1px, hsla(var(--border), 0.5) 1px, transparent 0);
  background-size: 2rem 2rem;
}

.feature-card::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  height: 2px;
  background: linear-gradient(90deg, transparent, hsl(var(--primary)), transparent);
  transition: all 0.3s ease-in-out;
  opacity: 0.8;
}

.feature-card:hover {
  transform: translateY(-5px);
  border-color: hsl(var(--primary));
  box-shadow: 0 10px 20px hsla(var(--primary), 0.1);
}

.feature-card:hover::before {
  box-shadow: 0 0 15px hsl(var(--primary));
}

.feature-card-header {
  display: flex;
  align-items: center;
  gap: 1rem;
}

.feature-card-title {
  font-size: 1.25rem;
  font-weight: 700;
  color: hsl(var(--card-foreground));
}

.feature-card-content {
  margin-top: 1rem;
  color: hsl(var(--muted-foreground));
}